# SQLite. Versions 3.8.0 and up are supported.
#   gem install sqlite3
#
#   Ensure the SQLite 3 gem is defined in your Gemfile
#   gem "sqlite3"

#default: &default
#  adapter: sqlite3
#  pool: <%#= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
#  timeout: 5000

#development:
#  <<: *default
#  database: storage/development.sqlite3

#  #Warning: The database defined as "test" will be erased and
# Do not set this db to the same as development or production.
#test:
#  <<: *default
#  database: storage/test.sqlite3

# #Store production database in the storage/ directory, which by default
# #is mounted as a persistent Docker volume in config/deploy.yml.
#production:
#  primary:
#    <<: *default
#    database: storage/production.sqlite3
#  cache:
#    <<: *default
#    database: storage/production_cache.sqlite3
#    migrations_paths: db/cache_migrate
#  queue:
#    <<: *default
#    database: storage/production_queue.sqlite3
#    migrations_paths: db/queue_migrate
#  cable:
#    <<: *default
#    database: storage/production_cable.sqlite3
#    migrations_paths: db/cable_migrate

# config/database.yml

default: &default
  adapter: postgresql
  encoding: unicode
  pool: 5
  username: buk
  password: buk1234
  host: localhost

development:
  <<: *default
  database: hack_develop

test:
  <<: *default
  database: hack_test

production:
  primary:
    <<: *default
    database: hack_production
    host: hack_api-db
    password: <%= Rails.application.credentials.dig(:postgres, :password) %>
  cache:
    <<: *default
    database: hack_production_cache
    migrations_paths: db/cache_migrate
    host: hack_api-db
    password: <%= Rails.application.credentials.dig(:postgres, :password) %>
  queue:
    <<: *default
    database: hack_production_queue
    migrations_paths: db/queue_migrate
    host: hack_api-db
    password: <%= Rails.application.credentials.dig(:postgres, :password) %>
  cable:
    <<: *default
    database: hack_production_cable
    migrations_paths: db/cable_migrate
    host: hack_api-db
    password: <%= Rails.application.credentials.dig(:postgres, :password) %>
